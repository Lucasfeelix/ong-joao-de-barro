# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-28 01:52
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_remove_donors_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Endereço')),
                ('number', models.IntegerField(verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('neighborhood', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('Acre', 'Acre'), ('Alagoas', 'Alagoas'), ('Amazonas', 'Amazonas'), ('Amapá', 'Amapá'), ('Bahia', 'Bahia'), ('Ceará', 'Ceará'), ('Brasília', 'Brasília'), ('Espírito Santo', 'Espírito Santo'), ('Goiás', 'Goiás'), ('Maranhão', 'Maranhão'), ('Minas Gerais', 'Minas Gerais'), ('Mato Grosso do Sul', 'Mato Grosso do Sul'), ('Mato Grosso', 'Mato Grosso'), ('Pará', 'Pará'), ('Paraíba', 'Paraíba'), ('Pernambuco', 'Pernambuco'), ('Piauí', 'Piauí'), ('Paraná', 'Paraná'), ('Rio de Janeiro', 'Rio de Janeiro'), ('Rio Grande do Norte', 'Rio Grande do Norte'), ('Rondônia', 'Rondônia'), ('Roraima', 'Roraima'), ('Rio Grande do Sul', 'Rio Grande do Sul'), ('Santa Catarina', 'Santa Catarina'), ('Sergipe', 'Sergipe'), ('São Paulo', 'São Paulo'), ('Tocantins', 'Tocantins')], max_length=16, verbose_name='Estado')),
                ('cep', models.CharField(blank=True, max_length=8, verbose_name='CEP')),
                ('name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('date_of_birth', models.DateField(help_text='Inserir data no seguinte                                     formato __/__/____', verbose_name='Data de nascimento')),
                ('gender', models.CharField(choices=[('Feminino', 'Feminino'), ('Masculino', 'Masculino')], max_length=14, verbose_name='Gênero')),
                ('civil_status', models.CharField(choices=[('Casado(a)', 'Casado(a)'), ('Divorciado(a)', 'Divorciado(a)'), ('Separado(a)', 'Separado(a)'), ('Solteiro(a)', 'Solteiro(a)'), ('União Estável', 'União Estável'), ('Viúvo(a)', 'Viúvo(a)')], max_length=14, verbose_name='Estado civil')),
                ('mothers_name', models.CharField(max_length=100, verbose_name='Mãe')),
                ('fathers_name', models.CharField(blank=True, max_length=100, verbose_name='Pai')),
                ('occupation', models.CharField(max_length=70, verbose_name='Profissão')),
                ('rg', models.CharField(max_length=9, unique=True, verbose_name='RG')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='CPF')),
                ('phone', models.CharField(blank=True, max_length=10, verbose_name='Telefone ')),
                ('cellphone', models.CharField(blank=True, max_length=11, verbose_name='Celular')),
                ('comments', models.TextField(blank=True, verbose_name='Observações')),
                ('bag_helped', models.BooleanField(default=False, help_text='O funcionário será remunerado                                     pelas atividades prestadas a ONG?', verbose_name='Bolsa auxílio')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Valor')),
                ('employees_type', models.CharField(choices=[('Colaborador', 'Colaborador'), ('Professor', 'Professor')], max_length=100, verbose_name='Tipo de serviço')),
                ('is_active', models.BooleanField(default=True, help_text='Status do aluno', verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Endereço')),
                ('number', models.IntegerField(verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('neighborhood', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('Acre', 'Acre'), ('Alagoas', 'Alagoas'), ('Amazonas', 'Amazonas'), ('Amapá', 'Amapá'), ('Bahia', 'Bahia'), ('Ceará', 'Ceará'), ('Brasília', 'Brasília'), ('Espírito Santo', 'Espírito Santo'), ('Goiás', 'Goiás'), ('Maranhão', 'Maranhão'), ('Minas Gerais', 'Minas Gerais'), ('Mato Grosso do Sul', 'Mato Grosso do Sul'), ('Mato Grosso', 'Mato Grosso'), ('Pará', 'Pará'), ('Paraíba', 'Paraíba'), ('Pernambuco', 'Pernambuco'), ('Piauí', 'Piauí'), ('Paraná', 'Paraná'), ('Rio de Janeiro', 'Rio de Janeiro'), ('Rio Grande do Norte', 'Rio Grande do Norte'), ('Rondônia', 'Rondônia'), ('Roraima', 'Roraima'), ('Rio Grande do Sul', 'Rio Grande do Sul'), ('Santa Catarina', 'Santa Catarina'), ('Sergipe', 'Sergipe'), ('São Paulo', 'São Paulo'), ('Tocantins', 'Tocantins')], max_length=16, verbose_name='Estado')),
                ('cep', models.CharField(blank=True, max_length=8, verbose_name='CEP')),
                ('name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('date_of_birth', models.DateField(help_text='Inserir data no seguinte                                     formato __/__/____', verbose_name='Data de nascimento')),
                ('gender', models.CharField(choices=[('Feminino', 'Feminino'), ('Masculino', 'Masculino')], max_length=14, verbose_name='Gênero')),
                ('civil_status', models.CharField(choices=[('Casado(a)', 'Casado(a)'), ('Divorciado(a)', 'Divorciado(a)'), ('Separado(a)', 'Separado(a)'), ('Solteiro(a)', 'Solteiro(a)'), ('União Estável', 'União Estável'), ('Viúvo(a)', 'Viúvo(a)')], max_length=14, verbose_name='Estado civil')),
                ('mothers_name', models.CharField(max_length=100, verbose_name='Mãe')),
                ('fathers_name', models.CharField(blank=True, max_length=100, verbose_name='Pai')),
                ('occupation', models.CharField(max_length=70, verbose_name='Profissão')),
                ('rg', models.CharField(max_length=9, unique=True, verbose_name='RG')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='CPF')),
                ('phone', models.CharField(blank=True, max_length=10, verbose_name='Telefone ')),
                ('cellphone', models.CharField(blank=True, max_length=11, verbose_name='Celular')),
                ('comments', models.TextField(blank=True, verbose_name='Observações')),
                ('scholarity', models.CharField(choices=[('Fundamental - Incompleto', 'Fundamental - Incompleto'), ('Fundamental - Completo', 'Fundamental - Completo'), ('Médio - Incompleto', 'Médio - Incompleto'), ('Médio - Completo', 'Médio - Completo'), ('Superior - Incompleto', 'Superior - Incompleto'), ('Superior - Completo', 'Superior - Completo'), ('Pós-graduação - Incompleto', 'Pós-graduação - Incompleto'), ('Pós-graduação - Completo', 'Pós-graduação - Completo'), ('Mestrado - Incompleto', 'Mestrado - Incompleto'), ('Mestrado - Completo', 'Mestrado - Completo'), ('Doutorado - Incompleto', 'Doutorado - Incompleto'), ('Doutorado - Completo', 'Doutorado - Completo')], max_length=100, verbose_name='Escolaridade')),
                ('school', models.CharField(blank=True, max_length=100, verbose_name='Escola')),
                ('time', models.CharField(choices=[('Matutino', 'Matutino'), ('Diurno', 'Diurno'), ('Vespertino', 'Vespertino'), ('Noturno', 'Noturno')], max_length=100, verbose_name='Período')),
                ('is_active', models.BooleanField(default=True, help_text='Status do aluno', verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='donors',
            name='cellphone',
            field=models.CharField(blank=True, max_length=11, verbose_name='Celular'),
        ),
        migrations.AddField(
            model_name='donors',
            name='comments',
            field=models.TextField(blank=True, verbose_name='Observações'),
        ),
        migrations.AddField(
            model_name='donors',
            name='email',
            field=models.EmailField(default='', max_length=254, unique=True, verbose_name='E-mail'),
        ),
        migrations.AddField(
            model_name='donors',
            name='phone',
            field=models.CharField(blank=True, max_length=10, verbose_name='Telefone '),
        ),
        migrations.AlterField(
            model_name='donors',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Status do doador', verbose_name='Ativo'),
        ),
    ]
